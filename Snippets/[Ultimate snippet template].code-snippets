{
    "Ultimate snippet template": {
        "scope": "",
        "prefix": "skel",
        "body": [
            "Name: ${10:Print to console}\r\nScope: ${20:javascript, typescript}\r\nPrefix: ${30:log}\r\n----------------------------------------\r\n${40:=========\r\nShortcuts\r\n=========\r\n\r\nctrl + shift + x:\r\ncreate a tab stop for selection\r\n\r\nctrl + shift + alt + x:\r\ncreate a choice tab stop like \\${20:Set-PSReadlineOption -EditMode \\${10|Emacs,Windows|\\}\\}\r\n\r\nctrl + shift + alt + page down:\r\nreset tab stop counter to 10\r\n\r\nctrl + shift + z:\r\ncreate a snippet for current snippet template file (no need to select all text)\r\n\r\nBWT, you can add multiple prefix like `Prefix: log, puts`.\r\n\r\n=========\r\nVariables\r\n=========\r\n\r\nWith \\$name or \\${name:default\\} you can insert the value of a variable. When a variable isn’t set,\r\nits default or the empty string is inserted. When a variable is unknown (that is, its name isn’t\r\ndefined) the name of the variable is inserted and it is transformed into a placeholder.\r\n\r\n+--------------------------+-------------------------------------------------------------+\r\n| Variable                 | Meaning                                                     |\r\n+--------------------------+-------------------------------------------------------------+\r\n| TM_SELECTED_TEXT         | The currently selected text or the empty string             |\r\n| TM_CURRENT_LINE          | The contents of the current line                            |\r\n| TM_CURRENT_WORD          | The contents of the word under cursor or the empty string   |\r\n| TM_LINE_INDEX            | The zero-index based line number                            |\r\n| TM_LINE_NUMBER           | The one-index based line number                             |\r\n| TM_FILENAME              | The filename of the current document                        |\r\n| TM_FILENAME_BASE         | The filename of the current document without its extensions |\r\n| TM_DIRECTORY             | The directory of the current document                       |\r\n| TM_FILEPATH              | The full file path of the current document                  |\r\n| CLIPBOARD                | The contents of your clipboard                              |\r\n| CURRENT_YEAR             | The current year                                            |\r\n| CURRENT_YEAR_SHORT       | The current year's last two digits                          |\r\n| CURRENT_MONTH            | The month as two digits (example '02')                      |\r\n| CURRENT_MONTH_NAME       | The full name of the month (example 'July')                 |\r\n| CURRENT_MONTH_NAME_SHORT | The short name of the month (example 'Jul')                 |\r\n| CURRENT_DATE             | The day of the month                                        |\r\n| CURRENT_DAY_NAME         | The name of day (example 'Monday')                          |\r\n| CURRENT_DAY_NAME_SHORT   | The short name of the day (example 'Mon')                   |\r\n| CURRENT_HOUR             | The current hour in 24-hour clock format                    |\r\n| CURRENT_MINUTE           | The current minute                                          |\r\n| CURRENT_SECOND           | The current second                                          |\r\n+--------------------------+-------------------------------------------------------------+\r\n\r\n===================\r\nVariable transforms\r\n===================\r\n\r\nTransformations allow you to modify the value of a variable or tabstop placeholder before it is inserted.\r\nThe definition of a transformation consists of three parts:\r\n\r\n* A regular expression that is matched against the value of a variable, or the empty string when the\r\n  variable cannot be resolved.\r\n* A \"format string\" that allows to reference matching groups from the regular expression. The format\r\n  string allows for conditional inserts and simple modifications.\r\n* Options that are passed to the regular expression.\r\n\r\nThe following example inserts the name of the current file without its ending, so from foo.txt it makes foo.\r\n\r\n\\${TM_FILENAME/(.*)\\\\\\\\..+\\$/\\$1/\\}\r\n  |           |         |  |\r\n  |           |         |  |-> no options\r\n  |           |         |\r\n  |           |         |-> references the contents of the first\r\n  |           |             capture group\r\n  |           |\r\n  |           |-> regex to capture everything before\r\n  |               the final `.suffix`\r\n  |\r\n  |-> resolves to the filename\r\n\r\nExamples:\r\n\r\n+-------------------------------------+-------------------------+------------------------------------+\r\n| Example                             | Output                  | Explanation                        |\r\n+-------------------------------------+-------------------------+------------------------------------+\r\n| \"\\${TM_FILENAME/[\\\\\\\\.]/_/\\}\"           | example-123_456-TEST.js | Replace the first . with _         |\r\n| \"\\${TM_FILENAME/[\\\\\\\\.-]/_/g\\}\"         | example_123_456_TEST_js | Replace each . or - with _         |\r\n| \"\\${TM_FILENAME/(.*)/\\${1:/upcase\\}/\\}\" | EXAMPLE-123.456-TEST.JS | Change to all upperacse            |\r\n| \"\\${TM_FILENAME/[^0-9^a-z]//gi\\}\"     | example123456TESTjs     | Remove non-alphanumeric characters |\r\n+-------------------------------------+-------------------------+------------------------------------+}"
        ],
        "description": "Ultimate snippet template"
    }
}

// Name: Ultimate snippet template
// Prefix: skel
// ----------------------------------------
// Name: ${10:Print to console}
// Scope: ${20:javascript, typescript}
// Prefix: ${30:log}
// ----------------------------------------
// ${40:=========
// Shortcuts
// =========
// 
// ctrl + shift + x:
// create a tab stop for selection
// 
// ctrl + shift + alt + x:
// create a choice tab stop like \${20:Set-PSReadlineOption -EditMode \${10|Emacs,Windows|\}\}
// 
// ctrl + shift + alt + page down:
// reset tab stop counter to 10
// 
// ctrl + shift + z:
// create a snippet for current snippet template file (no need to select all text)
// 
// BWT, you can add multiple prefix like `Prefix: log, puts`.
// 
// =========
// Variables
// =========
// 
// With \$name or \${name:default\} you can insert the value of a variable. When a variable isn’t set,
// its default or the empty string is inserted. When a variable is unknown (that is, its name isn’t
// defined) the name of the variable is inserted and it is transformed into a placeholder.
// 
// +--------------------------+-------------------------------------------------------------+
// | Variable                 | Meaning                                                     |
// +--------------------------+-------------------------------------------------------------+
// | TM_SELECTED_TEXT         | The currently selected text or the empty string             |
// | TM_CURRENT_LINE          | The contents of the current line                            |
// | TM_CURRENT_WORD          | The contents of the word under cursor or the empty string   |
// | TM_LINE_INDEX            | The zero-index based line number                            |
// | TM_LINE_NUMBER           | The one-index based line number                             |
// | TM_FILENAME              | The filename of the current document                        |
// | TM_FILENAME_BASE         | The filename of the current document without its extensions |
// | TM_DIRECTORY             | The directory of the current document                       |
// | TM_FILEPATH              | The full file path of the current document                  |
// | CLIPBOARD                | The contents of your clipboard                              |
// | CURRENT_YEAR             | The current year                                            |
// | CURRENT_YEAR_SHORT       | The current year's last two digits                          |
// | CURRENT_MONTH            | The month as two digits (example '02')                      |
// | CURRENT_MONTH_NAME       | The full name of the month (example 'July')                 |
// | CURRENT_MONTH_NAME_SHORT | The short name of the month (example 'Jul')                 |
// | CURRENT_DATE             | The day of the month                                        |
// | CURRENT_DAY_NAME         | The name of day (example 'Monday')                          |
// | CURRENT_DAY_NAME_SHORT   | The short name of the day (example 'Mon')                   |
// | CURRENT_HOUR             | The current hour in 24-hour clock format                    |
// | CURRENT_MINUTE           | The current minute                                          |
// | CURRENT_SECOND           | The current second                                          |
// +--------------------------+-------------------------------------------------------------+
// 
// ===================
// Variable transforms
// ===================
// 
// Transformations allow you to modify the value of a variable or tabstop placeholder before it is inserted.
// The definition of a transformation consists of three parts:
// 
// * A regular expression that is matched against the value of a variable, or the empty string when the
//   variable cannot be resolved.
// * A "format string" that allows to reference matching groups from the regular expression. The format
//   string allows for conditional inserts and simple modifications.
// * Options that are passed to the regular expression.
// 
// The following example inserts the name of the current file without its ending, so from foo.txt it makes foo.
// 
// \${TM_FILENAME/(.*)\\\\..+\$/\$1/\}
//   |           |         |  |
//   |           |         |  |-> no options
//   |           |         |
//   |           |         |-> references the contents of the first
//   |           |             capture group
//   |           |
//   |           |-> regex to capture everything before
//   |               the final `.suffix`
//   |
//   |-> resolves to the filename
// 
// Examples:
// 
// +-------------------------------------+-------------------------+------------------------------------+
// | Example                             | Output                  | Explanation                        |
// +-------------------------------------+-------------------------+------------------------------------+
// | "\${TM_FILENAME/[\\\\.]/_/\}"           | example-123_456-TEST.js | Replace the first . with _         |
// | "\${TM_FILENAME/[\\\\.-]/_/g\}"         | example_123_456_TEST_js | Replace each . or - with _         |
// | "\${TM_FILENAME/(.*)/\${1:/upcase\}/\}" | EXAMPLE-123.456-TEST.JS | Change to all upperacse            |
// | "\${TM_FILENAME/[^0-9^a-z]//gi\}"     | example123456TESTjs     | Remove non-alphanumeric characters |
// +-------------------------------------+-------------------------+------------------------------------+}